dfX[,length(unique(z)),by=list(ID)]
dfxX[,length(unique(z)),by=list(ID)]
dfx[,length(unique(z)),by=list(ID)]
dfx[,length(unique(z)),by=list(group)]
dfx
dfx[,length(unique(group)),by=list(group)]
dfx[,length(unique(group))]
dfx[,length(unique("group"))]
dfx[,nobs=length(unique("group"))]
dx <- data.table(dfx,key="group")
library(data.table)
ddply(dfx,.(group),function(d) length(unique(d$z)))
ddply(dfx,.(group),function(d) length(unique(d$group)))
ddply(dfx$group,.(group),function(d) length(unique(d$group)))
ddply(dfx$group,.(group),function(d) length(unique(d$z)))
ddply(dfx,.(group),function(d) length(unique(d$group)))
source("complete.R")
complete("specdata1", 1)
source("complete.R")
complete("specdata1", 1)
complete("specdata1", 1:2)
complete("specdata1", 1)
source("complete.R")
complete("specdata1", 1)
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
require(plyr)
df <- data.frame(subjectid = sample(1:3,7,T),
cond = sample(1:2,7,T), obser = sample(1:7))
df
ddply(df, .(cond), summarize, NumSubs = length(unique(subjectid)))
ddply(df, .(subjectid), summarize, NumSubs = length(unique(subjectid)))
ddply(df, .(subjectid), summarize, NumSubs = length(unique(cond)))
df1 <- subset(df, select = c(subjectid))
df1
ddply(df1, .(subjectid), summarize, NumSubs = length(unique(subjectid)))
ddply(df1, .(subjectid), summarize, NumSubs = count(unique(subjectid)))
ddply(df1, .(subjectid), summarize, count(unique(subjectid)))
df2 <- c(df1,df1)
df2
colnames(df2)[2] <- "id"
colnames(df2)[2] <- c("id")
df2
df2(1,)
df2[1,]
df2[2,]
df2[]
cbind(df2)
cbind(df1,df1)
df2 <- cbind(df1,df1)
data.frame(subid=df1,id=df1)
data.frame(subid=c(df1),id=df1)
df2 <- data.frame(subid=c(df1),id=df1)
ddply(df2, .(subjectid), summarize, NumSubs = length(unique(subjectid.1)))
ddply(df2, .(subjectid.1), summarize, NumSubs = length(unique(subjectid)))
table(df2)
table(df1)
df1
table(df1$subjectid)
table(df1$subjectid, count)
?table
tapply(df1$subjectid, df1$cond, function(x) length(unique(x)))
tapply(df1$subjectid, df1$cond, function(subjectid) length(unique(subjectid)))
library(sqldf)
as.data.frame(table(df1))
df2 <- as.data.frame(table(df1))
df2
names(df2)[2] <- "nobs"
df2
names(df2)[1] <- "id"
df2
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
source("complete.R")
complete("specdata1", 1:2)
complete("specdata1", 1)
complete("specdata", 3)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata1", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata1", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata1", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata1", c(2, 4, 8, 10, 12))
complete("specdata1", c(1, 2, 4, 8, 10, 12))
source("complete.R")
complete("specdata1", c(1, 2, 4, 8, 10, 12))
submit()
submit()
submit()
submit()
submit()
source("complete1.R")
complete("specdata1", c(1, 2, 4, 8, 10, 12))
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
source("complete1.R")
getwd()
setwd(C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
getwd()
source("complete1.R")
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
source("complete1.R")
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
getwd()
dir()
complete1("specdata1", c(1, 2, 4, 8, 10, 12))
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
complete1("specdata1", c(1, 2))
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
source("complete1.R")
complete1("specdata1", c(1, 2))
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete1.R")
complete1("specdata1", c(1, 2))
source("complete1.R")
complete1("specdata1", c(1, 2))
source("complete1.R")
complete1("specdata1", c(1, 2))
submit()
source("complete1.R")
source("complete.R")
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete.R")
complete("specdata1", c(1, 2))
source("complete.R")
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete.R")
complete("specdata1", c(1, 2))
getwd()
submit
submit()
quit()
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
source("complete.R")
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("complete.R")
complete("specdata1",1:2)
source("corr.R")
corr("specdata1",5)
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
corr("specdata1",5)
hd <- corr("specdata1",5)
head(hd)
summary(hd)
source("corr.R")
hd <- corr("specdata1",5)
summary(hd)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
length(hd)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
head(hd)
summary(hd)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
source("corr.R")
hd <- corr("specdata1",5)
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
getwd()
source("corr.R")
source("corr.R")
hd <- corr("specdata1",5)
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
hd <- corr("specdata1",5)
getwd()
source("corr.R")
hd <- corr("specdata1",5)
hd <- corr("specdata1",5)
getwd()
source("corr.R")
hd <- corr("specdata1",5)
head(hd)
summary(hd)
length(hd)
hd <- corr("specdata1",1000)
head(hd)
source("corr.R")
hd <- corr("specdata1",1000)
cor(nitrate,sulphate)
cor(hd,nitrate,sulphate)
cov(hd,nitrate,sulphate)
hd <- corr("specdata1",2000)
source("corr.R")
hd <- corr("specdata1",20)
source("corr.R")
hd <- corr("specdata1",20)
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir")
source("corr.R")
source("corr.R")
hd <- corr("specdata1",20)
head(hd)
summary(hd)
source("corr.R")
hd <- corr("specdata1",20)
summary(hd)
hd <- corr("specdata1",20)
summary(hd)
length(hd)
hd <- corr("specdata1",50)
length(hd)
hd <- corr("specdata1",50)
summary(hd)
submit()
submit()
submit()
quit()
matv <- c(22,44,25,55,66)
cachemean(matv)
source("cachetest.R")
cachemean(matv)
matv <- c(22,44,25,55,66,77,99,33,47)
as.matrix(c,3,3)
as.matrix(matv,3,3)
matv <- c(22,44,25,55,66,77,99,33,47)
matv
matrix(matv,3,3)
cachemean(matv)
cachemean(5:10)
df <- data.frame(x=2:8,y=4:10)
cachemean(df)
df
df1<- as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric")
as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric")
df <- data.frame(2:8,4:10)
df
cachemean(df)
y <- c(1,2,3,4,5)
cachemean(y)
matv <- c(22,44,25,55,66,77,99,33,47)
matrix(matv,3,3)
cc <- as.data.frame(matv)
cc
cachemean(cc)
cachemean(cc)
source("cachetest.R")
cachemean(cc)
source("cachetest.R")
cachemean(cc)
m <- x$getmean()
m <- x$getmean()
m <- x$getmean()
source("cachetest.R")
a <- cachemean()
cachemean(matrix(1:4,2,2))
source("cachetest.R")
a$set(matrix(1:4,2,2)
a<-makeCacheMatrix()
a$set(matrix(1:4,2,2)
)
a
a$set(matrix(1:4,2,2)
)
makeCacheMatrix()
makeCacheMatrix(matrix(1:4,2,2))
source("cachetest.R")
makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(matrix(1:4,2,2))
source("cachetest.R")
cacheSolve(matrix(1:4,2,2))
source("cachetest.R")
makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(matrix(1:4,2,2))
source("cachetest.R")
a<-makeCacheMatrix()
a$set(matrix(1:4,2,2)
)
b<-cacheSolve()
a$get(matrix(1:4,2,2))
source("cachematrix.R")
dir()
source("cachematrix.R")
makeCacheMatrix(matrix(1:4,2,2))
a <-makeCacheMatrix()
a$set(matrix(1:6),2,2)
a$get(matrix(1:6),2,2)
a$get(matrix(1:6,2,2))
a$get(matrix(1:6))
a$get
a$get()
a <-makeCacheMatrix()
source("cachematrix.R")
a <-makeCacheMatrix()
a$set(matrix(1:6))
a$get(matrix(1:6))
a$get()
a$setInverse(matrix(1:6))
a$getInverse(matrix(1:6))
a$getInverse()
b <- cacheSolve()
b <- cacheSolve(matrix(1:6))
set <- function(matrix) {
m <<- matrix
i <<- NULL
}
get <- function() {
m
}
setInverse <- function(inverse) {
i <<- inverse
}
getInverse <- function() {
i
}
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getInverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data) %*% data
x$setInverse(m)
m
}
source("cachematrix.R")
system('clear')
?system
system('\127')
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(2:7,2,2))
a$get()
a$getinverse()
a$getInverse()
a$setInverse()
b <- cacheSolve()
b <- cacheSolve(matrix(2:7))
source("cachematrix.R")
b <- cacheSolve(matrix(2:7))
b <- cacheSolve(matrix(2:7,2,2))
b <- cacheSolve(matrix(2:7,2,2))
source("cachematrix.R")
b <- cacheSolve(matrix(2:7,2,2))
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(2:7,2,2))
b <- cacheSolve(matrix(2:7,2,2))
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(2:7,2,2))
a$get()
a <- cacheSolve(a$get())
b <- a$get()
cacheSolve(b
)
cacheSolve(a)
cacheSolve(a)
a$set(matrix(2:7,3,2))
a$get()
cacheSolve(a)
a$set(matrix(2:10,3,3))
a$get()
cacheSolve(a)
cacheSolve(a)
a$set(matrix(2:10,2,2))
a$set(matrix(2:5,2,2))
a$get()
cacheSolve(a)
source("cachematrix.R")
a$get()
a <- makeCacheMatrix()
a$set(matrix(c(33,44,55,66),2,2))
a$get()
cacheSolve(a)
cacheSolve(a)
a <- makeCacheMatrix()
a$set(matrix(c(31,14,35,66),2,2))
a$get()
cacheSolve(a)
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(c(31,14,35,66),2,2))
a$set(matrix(c(31,14,30,60),2,2))
a$get()
cacheSolve(a)
getwd()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir/ProgrammingAssignment2")
getwd()
ls
ls()
dir()
setwd("C:/Users/vikram/Desktop/Big Data & Hadoop/Data Science Specialization/CourseraDir/ProjectAssignment2")
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(c(31,14,30,60),2,2))
a$get()
cacheSolve(a)
